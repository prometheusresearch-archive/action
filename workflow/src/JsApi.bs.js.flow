/**
 * @flow strict
 */

export type Result<T> = {+type: 'Error', +error: string} | {+type: 'Ok', +value: T};

export opaque type UI = mixed;
export opaque type State = mixed;
export opaque type QueryResult = mixed;
export type Args = {[name: string]: string | number | boolean};
export type RenderableState = {ui: ?UI, state: State};

declare export var start: Result<RenderableState>;
declare export function id(state: State): string;
declare export function render(state: State): Result<RenderableState>;
declare export function next(state: State): Array<State>;

declare export function getData(state: State): QueryResult;
declare export function getTitle(state: State): QueryResult;

declare export function pickValue(
  id: mixed,
  state: State,
): Result<RenderableState>;

declare export function uiName(ui: UI): string;
declare export function uiArgs(ui: UI): Args;
declare export function breadcrumbs(State): Array<State>;
declare export function next(State): Array<State>;
